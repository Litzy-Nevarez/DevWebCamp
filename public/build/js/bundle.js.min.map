{"version":3,"sources":["horas.js","ponentes.js","taks.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","classList","add","horasTomadas","map","evento","hora_id","Array","from","filter","dataset","horaId","remove","console","log","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEvento","horaPrevia","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultado","mostrarPonentes","tagsInput","tags","tagsDiv","tagsInputHidden","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEvento();\r\n        }\r\n\r\n        async function buscarEvento() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reininicar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Comprobar eventos ya tomados y quitar la variable deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId)); // horas diponibles\r\n\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            console.log(resultado)\r\n\r\n\r\n            const horasDispobles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDispobles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de día\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id,\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        // Si encontro ponente\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente\r\n\r\n                    // Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-ponentes__no-resultado');\r\n                noResultado.textContent = 'No hay resultados para tu búsqueda';\r\n\r\n                listadoPonentes.appendChild(noResultado);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n            console.log(ponenteHidden);\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n        let tags = [];\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n\r\n            if(e.keyCode === 44) {\r\n                \r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => { \r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}