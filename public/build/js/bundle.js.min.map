{"version":3,"sources":["horas.js","ponentes.js","taks.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","Object","values","includes","buscarEvento","async","url","resultado","fetch","eventos","listadoHoras","li","classList","add","horasTomadas","map","evento","hora_id","Array","from","filter","dataset","horaId","remove","console","log","hora","seleccionarHora","obtenerHorasDisponibles","json","horaPrevia","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultado","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tags","tagsDiv","tagsInputHidden","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || '',\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEvento();\r\n                const id = inputHiddenHora.value;\r\n                // Resaltar la hora actual del evento\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEvento();\r\n        }\r\n\r\n        async function buscarEvento() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reininicar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Comprobar eventos ya tomados y quitar la variable deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId)); // horas diponibles\r\n\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            console.log(resultado)\r\n\r\n\r\n            const horasDispobles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDispobles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dÃ­a\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value) {\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre, apellido } = ponente;\r\n\r\n                // Insertar en el html\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n\r\n            })();\r\n        }\r\n\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id,\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        // Si encontro ponente\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente\r\n\r\n                    // AÃ±adir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-ponentes__no-resultado');\r\n                noResultado.textContent = 'No hay resultados para tu bÃºsqueda';\r\n\r\n                listadoPonentes.appendChild(noResultado);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n        let tags = [];\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n\r\n            if(e.keyCode === 44) {\r\n                \r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => { \r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}